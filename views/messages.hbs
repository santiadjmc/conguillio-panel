<div class="data">
    <div class="user-data">
        <div class="user-data-name">{{target.name}}</div>
        <img class="user-data-avatar" src="{{target.avatar}}" alt="{{target.name}}">
        <div class="user-status">
            <div class="user-status-text {{target.status}}-status" id="status-data">{{target.status}}</div>
        </div>
    </div>
</div>
<div class="chat">
    <div class="chat-messages">
        {{#each messages}}
        <div class="chat-message {{#if this.isOwn}}own{{/if}}">
            <div class="chat-message-text">
                <p class="chat-message-text-paragraph">
                    <img class="chat-message-text-avatar" src="{{this.avatar}}" alt="{{this.name}}">
                    <b>{{this.username}}</b>: {{this.content}}
                </p>
            </div>
        </div>
        {{/each}}
    </div>
    <div class="chat-input">
        <input type="text" class="chat-input-text" placeholder="Envia un mensaje a @{{target.username}}"
            autocomplete="off" autofocus>
        <button type="button" class="chat-input-button">
            <i class="fas fa-paper-plane"></i>
        </button>
    </div>
</div>
<div id="back-to-top">
    <i class="fas fa-arrow-up"></i>
</div>
<div id="back-to-bottom">
    <i class="fas fa-arrow-down"></i>
</div>
<script>
    let unreadMessages = 0;
    let userStatus = "{{target.status}}"
    function removeXSS(str) {
        return str.replace(/<(?:.|\n)*?>/gm, 'HTML TAG REMOVED');
    }
    $(window).scroll(function () {
        if ($(this).scrollTop() > 50) {
            $('#back-to-top').fadeIn();
        } else {
            $('#back-to-top').fadeOut();
        }
    });
    $('#back-to-top').click(function () {
        $('body,html').animate({
            scrollTop: 0
        }, 500);
        return false;
    });
    $(window).scroll(function () {
        if ($(this).scrollTop() < 50) {
            $('#back-to-bottom').fadeOut();
        } else {
            $('#back-to-bottom').fadeIn();
        }
    });
    $('#back-to-bottom').click(function () {
        $('body,html').animate({
            scrollTop: $(document).height()
        }, 500);
        return false;
    });
    $('#back-to-bottom').css({
        'position': 'fixed',
        'bottom': '0',
        'right': '0',
        'width': '50px',
        'height': '50px',
        'background-color': '#fff',
        'border-radius': '50%',
        'cursor': 'pointer',
        'display': 'none',
        'z-index': '9999',
        'text-align': 'center',
    });
    $('#back-to-top').css({
        'position': 'fixed',
        'top': '0',
        'right': '0',
        'width': '50px',
        'height': '50px',
        'background-color': '#fff',
        'border-radius': '50%',
        'cursor': 'pointer',
        'display': 'none',
        'z-index': '9999',
        'text-align': 'center',
    });
    socket.emit("set-chat", "{{target.id}}");
    $(".chat-input-text").keypress(function (e) {
        if (e.which == 13) {
            $(".chat-input-button").click();
        }
    });
    $(".chat-input-button").click(async function () {
        const text = $(".chat-input-text").val();
        if (text.length > 0) {
            $(".chat-input-text").val('');
            $(".chat-messages").append(`
                <div class="chat-message own">
                    <div class="chat-message-text">
                        <p class="chat-message-text-paragraph">
                            <img class="chat-message-text-avatar" src="{{user.avatar}}" alt="{{user.name}}">
                            <b>{{user.username}}</b>: ${removeXSS(text)}</p>
                    </div>
                </div>
            `);
            window.scrollBy(0, 230);
            const response = await fetch('/api/users/{{target.id}}/messages', {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "authorization": "User {{user.id}}"
                },
                body: JSON.stringify({ content: text })
            });
            if (response.status > 399) {
                displayModal("Error", `No pudimos enviar tu mensaje, actualiza la página e inténtalo de nuevo.`);
                return;
            }
            console.log("WebSocketManager: Message stored, sending to server through socket...");
            socket.emit("message", {
                content: removeXSS(text),
                target: '{{target.id}}',
                user: '{{user.id}}'
            });
            console.log("WebSocketManager: Message sent to server through socket.");
        }
        else {
            displayModal("Error", "Cannot send an empty message");
        }
    });
    $(".user-data").click(function () {
        $(".chat-input-text").focus();
    });
    socket.on("message", function (data) {
        console.log("WebSocketManager: Message received from server.");
        $(".chat-messages").append(`
            <div class="chat-message">
                <div class="chat-message-text">
                    <p class="chat-message-text-paragraph">
                        <img class="chat-message-text-avatar" src="${data.user.avatar}" alt="${data.user.name}">
                        <b>${data.user.username}</b>: ${data.content}
                    </p>
                </div>
            </div>
        `);
        window.scrollBy(0, 230);
        if (!utils.windowFocused()) {
            unreadMessages++;
            utils.changeTitle(`[${unreadMessages < 10 ? unreadMessages : '+9'}] {{target.username}}`);
            utils.displayNotification(`{{target.username}}`, `${data.content}`);
            utils.playSound("/audio/new_message.mp3");
        }
    });
    window.addEventListener("focus", () => {
        unreadMessages = 0;
        utils.changeTitle(`{{target.username}}`);
        $(".chat-input-text").focus();
    });
    socket.on("typing", function (data) {
        if (!data.isTyping) {
            $("#typing").remove();
            return;
        }
        if ($("#typing").length > 0) {
            $("#typing").remove();
        }
        $(".chat-messages").append(`
            <div id="typing" class="chat-message typing-animation">
                <div class="chat-message-text">
                    <p class="chat-message-text-paragraph">
                        <img class="chat-message-text-avatar" src="${data.user.avatar}" alt="${data.user.name}">
                        <b>${data.user.username}</b> está escribiendo...
                    </p>
                </div>
            </div>
        `);
        window.scrollBy(0, 230);
    });
    socket.on("check-input", () => {
        socket.emit("check-input-response", {
            target: '{{target.id}}',
            user: '{{user.id}}',
            content: $(".chat-input-text").val()
        });
    });
    socket.on("status", data => {
        if (String(data.user.id) !== '{{target.id}}') {
            return;
        }
        if (data.status === "online") {
            $(".user-status-text").text("online");
            userStatus = "online";
            console.log(`WebSocketManager: Received status: ${data.status}`);
        } else {
            $(".user-status-text").text("offline");
            userStatus = "offline";
            console.log(`WebSocketManager: Received status: ${data.status}`);
        }
        document.getElementById("status-data").className = `user-status-text ${userStatus}-status`;
    });
</script>
<style>
    .chat {
        display: flex;
        flex-direction: column;
        height: 100%;
    }

    .chat-messages {
        flex: 1;
        overflow-y: auto;
    }

    .chat-message {
        display: flex;
        flex-direction: row;
        align-items: center;
        padding: 10px;
        margin-bottom: 10px;
        border-radius: 5px;
        background-color: #f5f5f5;
    }

    .chat-message-text {
        display: flex;
        flex-direction: column;
        flex: 1;
        position: relative;
    }

    .own {
        background-color: #e5e5e5;
        flex-direction: row-reverse;
        position: relative;
    }

    .chat-message-text-paragraph {
        margin: 0;
    }

    .chat-input {
        display: flex;
        flex-direction: row;
        align-items: center;
        padding: 10px;
        border-radius: 5px;
        background-color: #f5f5f5;
    }

    .chat-input-text {
        flex: 0.4;
        border: none;
        outline: none;
        font-size: 16px;
        padding: 10px;
        left: 10px;
    }

    .user-data {
        display: flex;
        flex-direction: row;
        align-items: center;
        padding: 10px;
        border-radius: 5px;
        background-color: #f5f5f5;
    }

    .user-data:hover {
        background-color: #e5e5e5;
    }

    .user-data-name {
        font-size: 16px;
        margin-right: 10px;
    }

    .user-data-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        margin-right: 10px;
    }

    .user-status {
        display: flex;
        flex-direction: row;
        align-items: center;
        padding: 10px;
        border-radius: 5px;
        background-color: #f5f5f5;
    }

    .user-status-text {
        font-size: 16px;
        margin-right: 10px;
    }

    .chat-input-button {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: #f5f5f5;
        border: none;
        outline: none;
    }

    .chat-input-button:hover {
        background-color: #e5e5e5;
    }

    .chat-message-text-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        margin-right: 10px;
    }

    .fixed {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        z-index: 1;
    }

    .fixed-bottom {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        z-index: 1;
    }

    .offline-status {
        color: #ff0000;
    }

    .online-status {
        color: #00ff00;
    }

    .typing-status {
        color: #363535;
    }
</style>